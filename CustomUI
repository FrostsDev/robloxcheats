-- FrostUI.lua (cleaner + draggable + Rayfield-like features)
local FrostUI = {}
FrostUI.__index = FrostUI

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- Utility: Make objects draggable
local function makeDraggable(frame)
	local dragToggle, dragStart, startPos
	frame.Active = true

	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if dragToggle and input.UserInputType == Enum.UserInputType.MouseMovement then
			local delta = input.Position - dragStart
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end

-- Utility: Create toggle button style with animation
local function createToggle(parent, callback)
	local toggleFrame = Instance.new("Frame")
	toggleFrame.Size = UDim2.new(0, 45, 0, 20)
	toggleFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	toggleFrame.ClipsDescendants = true
	toggleFrame.Parent = parent
	toggleFrame.BorderSizePixel = 0
	local corner = Instance.new("UICorner", toggleFrame)
	corner.CornerRadius = UDim.new(0, 10)

	local circle = Instance.new("Frame")
	circle.Size = UDim2.new(0, 18, 0, 18)
	circle.Position = UDim2.new(0, 2, 0, 1)
	circle.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
	circle.Parent = toggleFrame
	local circleCorner = Instance.new("UICorner", circle)
	circleCorner.CornerRadius = UDim.new(1, 0)

	local toggled = false

	local function setToggle(state)
		toggled = state
		local goal = {}
		if toggled then
			goal.Position = UDim2.new(1, -20, 0, 1)
			goal.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
		else
			goal.Position = UDim2.new(0, 2, 0, 1)
			goal.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
		end
		TweenService:Create(circle, TweenInfo.new(0.2, Enum.EasingStyle.Quad), goal):Play()
	end

	toggleFrame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			setToggle(not toggled)
			callback(toggled)
		end
	end)

	-- Initialize off
	setToggle(false)

	return toggleFrame, function(state)
		setToggle(state)
		callback(state)
	end
end

-- Utility: Create slider style with animation
local function createSlider(parent, min, max, default, callback)
	local sliderFrame = Instance.new("Frame")
	sliderFrame.Size = UDim2.new(1, 0, 0, 30)
	sliderFrame.BackgroundTransparency = 1
	sliderFrame.Parent = parent

	local bar = Instance.new("Frame")
	bar.Size = UDim2.new(1, -10, 0, 8)
	bar.Position = UDim2.new(0, 5, 0, 15)
	bar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	bar.BorderSizePixel = 0
	bar.Parent = sliderFrame
	local barCorner = Instance.new("UICorner", bar)
	barCorner.CornerRadius = UDim.new(0, 4)

	local fill = Instance.new("Frame")
	fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
	fill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
	fill.BorderSizePixel = 0
	fill.Parent = bar
	local fillCorner = Instance.new("UICorner", fill)
	fillCorner.CornerRadius = UDim.new(0, 4)

	local valueLabel = Instance.new("TextLabel")
	valueLabel.Size = UDim2.new(0, 50, 0, 14)
	valueLabel.Position = UDim2.new(1, 5, 0, 8)
	valueLabel.BackgroundTransparency = 1
	valueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	valueLabel.TextSize = 14
	valueLabel.Font = Enum.Font.Gotham
	valueLabel.Text = tostring(default)
	valueLabel.Parent = sliderFrame

	local dragging = false
	local UIS = game:GetService("UserInputService")

	bar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
		end
	end)
	bar.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)
	UIS.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local mouseX = input.Position.X
			local barX = bar.AbsolutePosition.X
			local barWidth = bar.AbsoluteSize.X
			local relativeX = math.clamp(mouseX - barX, 0, barWidth)
			local percent = relativeX / barWidth
			local value = math.floor(min + (max - min) * percent)
			fill.Size = UDim2.new(percent, 0, 1, 0)
			valueLabel.Text = tostring(value)
			callback(value)
		end
	end)

	return sliderFrame
end

-- Utility: Create dropdown
local function createDropdown(parent, options, default, callback)
	local dropdownFrame = Instance.new("Frame")
	dropdownFrame.Size = UDim2.new(1, 0, 0, 30)
	dropdownFrame.BackgroundTransparency = 1
	dropdownFrame.Parent = parent

	local dropdownButton = Instance.new("TextButton")
	dropdownButton.Size = UDim2.new(1, 0, 1, 0)
	dropdownButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	dropdownButton.BorderSizePixel = 0
	dropdownButton.Text = default or options[1]
	dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	dropdownButton.Font = Enum.Font.Gotham
	dropdownButton.TextSize = 14
	dropdownButton.Parent = dropdownFrame
	local corner = Instance.new("UICorner", dropdownButton)
	corner.CornerRadius = UDim.new(0, 6)

	local listFrame = Instance.new("Frame")
	listFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	listFrame.Size = UDim2.new(1, 0, 0, 0)
	listFrame.Position = UDim2.new(0, 0, 1, 2)
	listFrame.ClipsDescendants = true
	listFrame.Parent = dropdownFrame
	local listCorner = Instance.new("UICorner", listFrame)
	listCorner.CornerRadius = UDim.new(0, 6)

	local uiList = Instance.new("UIListLayout", listFrame)
	uiList.SortOrder = Enum.SortOrder.LayoutOrder
	uiList.Padding = UDim.new(0, 2)

	local open = false

	local function toggleDropdown()
		open = not open
		if open then
			listFrame:TweenSize(UDim2.new(1, 0, 0, #options * 25 + 5), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
		else
			listFrame:TweenSize(UDim2.new(1, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
		end
	end

	dropdownButton.MouseButton1Click:Connect(toggleDropdown)

	for i, option in ipairs(options) do
		local optionBtn = Instance.new("TextButton")
		optionBtn.Size = UDim2.new(1, -10, 0, 25)
		optionBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		optionBtn.BorderSizePixel = 0
		optionBtn.Text = option
		optionBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
		optionBtn.Font = Enum.Font.Gotham
		optionBtn.TextSize = 14
		optionBtn.Parent = listFrame
		optionBtn.LayoutOrder = i
		local corner = Instance.new("UICorner", optionBtn)
		corner.CornerRadius = UDim.new(0, 4)

		optionBtn.MouseButton1Click:Connect(function()
			dropdownButton.Text = option
			callback(option)
			toggleDropdown()
		end)
	end

	return dropdownFrame
end

-- Utility: Create textbox
local function createTextbox(parent, placeholder, callback)
	local textBox = Instance.new("TextBox")
	textBox.Size = UDim2.new(1, 0, 0, 25)
	textBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	textBox.BorderSizePixel = 0
	textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	textBox.Font = Enum.Font.Gotham
	textBox.TextSize = 14
	textBox.PlaceholderText = placeholder or ""
	textBox.ClearTextOnFocus = false
	textBox.Parent = parent
	local corner = Instance.new("UICorner", textBox)
	corner.CornerRadius = UDim.new(0, 5)

	textBox.FocusLost:Connect(function(enterPressed)
		if enterPressed then
			callback(textBox.Text)
		end
	end)

	return textBox
end

-- Utility: Create color picker (basic)
local function createColorPicker(parent, defaultColor, callback)
	local colorFrame = Instance.new("Frame")
	colorFrame.Size = UDim2.new(1, 0, 0, 30)
	colorFrame.BackgroundTransparency = 1
	colorFrame.Parent = parent

	local label = Instance.new("TextLabel")
	label.Text = "Color Picker"
	label.Size = UDim2.new(0.5, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = colorFrame

	local colorDisplay = Instance.new("Frame")
	colorDisplay.Size = UDim2.new(0, 30, 0, 20)
	colorDisplay.Position = UDim2.new(1, -35, 0.5, -10)
	colorDisplay.BackgroundColor3 = defaultColor or Color3.fromRGB(255, 255, 255)
	colorDisplay.BorderSizePixel = 0
	colorDisplay.Parent = colorFrame
	local corner = Instance.new("UICorner", colorDisplay)
	corner.CornerRadius = UDim.new(0, 5)

	-- When clicked, open ColorPicker GUI (basic placeholder)
	colorDisplay.MouseButton1Click:Connect(function()
		-- You can implement a full color picker here
		-- For simplicity, let's just call callback with white color
		callback(Color3.fromRGB(255, 255, 255))
	end)

	return colorFrame
end

-- Create Main Window
function FrostUI:CreateWindow(title, settings)
	local ScreenGui = Instance.new("ScreenGui")
	ScreenGui.Parent = game:GetService("CoreGui")
	ScreenGui.Name = "FrostUI"
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	local MainFrame = Instance.new("Frame")
	MainFrame.Size = UDim2.new(0, 500, 0, 350)
	MainFrame.Position = UDim2.new(0.3, 0, 0.3, 0)
	MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	MainFrame.BorderSizePixel = 0
	MainFrame.Parent = ScreenGui
	MainFrame.Active = true

	local corner = Instance.new("UICorner", MainFrame)
	corner.CornerRadius = UDim.new(0, 8)

	local shadow = Instance.new("ImageLabel")
	shadow.Name = "Shadow"
	shadow.Parent = MainFrame
	shadow.AnchorPoint = Vector2.new(0.5, 0.5)
	shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
	shadow.Size = UDim2.new(1, 60, 1, 60)
	shadow.BackgroundTransparency = 1
	shadow.ZIndex = -1
	shadow.Image = "rbxassetid://1316045217"
	shadow.ImageTransparency = 0.3
	shadow.ScaleType = Enum.ScaleType.Slice
	shadow.SliceCenter = Rect.new(10, 10, 118, 118)

	local TitleBar = Instance.new("TextLabel")
	TitleBar.Size = UDim2.new(1, 0, 0, 35)
	TitleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	TitleBar.BorderSizePixel = 0
	TitleBar.Text = title
	TitleBar.TextColor3 = Color3.fromRGB(255, 255, 255)
	TitleBar.TextSize = 18
	TitleBar.Font = Enum.Font.GothamBold
	TitleBar.Parent = MainFrame

	local titleCorner = Instance.new("UICorner", TitleBar)
	titleCorner.CornerRadius = UDim.new(0, 8)

	makeDraggable(MainFrame)

	local TabHolder = Instance.new("Frame")
	TabHolder.Size = UDim2.new(0, 130, 1, -35)
	TabHolder.Position = UDim2.new(0, 0, 0, 35)
	TabHolder.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	TabHolder.Parent = MainFrame

	local tabLayout = Instance.new("UIListLayout", TabHolder)
	tabLayout.Padding = UDim.new(0, 8)
	tabLayout.SortOrder = Enum.SortOrder.LayoutOrder

	local ContentFrame = Instance.new("Frame")
	ContentFrame.Size = UDim2.new(1, -130, 1, -35)
	ContentFrame.Position = UDim2.new(0, 130, 0, 35)
	ContentFrame.BackgroundTransparency = 1
	ContentFrame.Parent = MainFrame

	local tabs = {}

	function FrostUI:AddTab(name)
		local btn = Instance.new("TextButton")
		btn.Size = UDim2.new(1, 0, 0, 35)
		btn.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		btn.Text = name
		btn.TextColor3 = Color3.fromRGB(255, 255, 255)
		btn.Font = Enum.Font.GothamSemibold
		btn.TextSize = 16
		btn.Parent = TabHolder
		local btnCorner = Instance.new("UICorner", btn)
		btnCorner.CornerRadius = UDim.new(0, 8)

		local page = Instance.new("ScrollingFrame")
		page.Size = UDim2.new(1, 0, 1, 0)
		page.BackgroundTransparency = 1
		page.Visible = false
		page.Parent = ContentFrame
		page.CanvasSize = UDim2.new(0, 0, 0, 0)
		page.ScrollBarThickness = 6
		page.AutomaticCanvasSize = Enum.AutomaticSize.Y

		local layout = Instance.new("UIListLayout", page)
		layout.Padding = UDim.new(0, 12)
		layout.SortOrder = Enum.SortOrder.LayoutOrder

		btn.MouseButton1Click:Connect(function()
			for _, t in pairs(tabs) do
				t.page.Visible = false
				t.btn.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			end
			page.Visible = true
			btn.BackgroundColor3 = Color3.fromRGB(0, 140, 255)
		end)

		table.insert(tabs, {btn = btn, page = page})

		if #tabs == 1 then
			page.Visible = true
			btn.BackgroundColor3 = Color3.fromRGB(0, 140, 255)
		end

		-- Add section function inside tab
		local sections = {}

		local function addSection(title)
			local sectionFrame = Instance.new("Frame")
			sectionFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			sectionFrame.Size = UDim2.new(1, -20, 0, 30)
			sectionFrame.Parent = page
			sectionFrame.ClipsDescendants = true
			local sectionCorner = Instance.new("UICorner", sectionFrame)
			sectionCorner.CornerRadius = UDim.new(0, 6)

			local sectionTitle = Instance.new("TextLabel")
			sectionTitle.Size = UDim2.new(1, -10, 0, 25)
			sectionTitle.Position = UDim2.new(0, 10, 0, 5)
			sectionTitle.BackgroundTransparency = 1
			sectionTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			sectionTitle.Font = Enum.Font.GothamBold
			sectionTitle.TextSize = 16
			sectionTitle.Text = title
			sectionTitle.TextXAlignment = Enum.TextXAlignment.Left
			sectionTitle.Parent = sectionFrame

			local contentHolder = Instance.new("Frame")
			contentHolder.Size = UDim2.new(1, -20, 0, 0)
			contentHolder.Position = UDim2.new(0, 10, 0, 30)
			contentHolder.BackgroundTransparency = 1
			contentHolder.Parent = sectionFrame

			local contentLayout = Instance.new("UIListLayout", contentHolder)
			contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
			contentLayout.Padding = UDim.new(0, 8)

			local function updateSize()
				local size = 0
				for _, child in pairs(contentHolder:GetChildren()) do
					if child:IsA("GuiObject") then
						size = size + child.Size.Y.Offset + contentLayout.Padding.Offset
					end
				end
				contentHolder.Size = UDim2.new(1, 0, 0, size)
				sectionFrame.Size = UDim2.new(1, -20, 0, 30 + size)
			end

			contentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateSize)

			-- Initial update
			task.spawn(function()
				updateSize()
			end)

			local sectionAPI = {}

			function sectionAPI:AddLabel(text)
				local lbl = Instance.new("TextLabel")
				lbl.Size = UDim2.new(1, 0, 0, 18)
				lbl.BackgroundTransparency = 1
				lbl.Text = text
				lbl.TextColor3 = Color3.fromRGB(220, 220, 220)
				lbl.TextSize = 14
				lbl.Font = Enum.Font.Gotham
				lbl.TextXAlignment = Enum.TextXAlignment.Left
				lbl.Parent = contentHolder
				updateSize()
				return lbl
			end

			function sectionAPI:AddButton(text, callback)
				local btn = Instance.new("TextButton")
				btn.Size = UDim2.new(1, 0, 0, 25)
				btn.BackgroundColor3 = Color3.fromRGB(0, 140, 255)
				btn.TextColor3 = Color3.fromRGB(255, 255, 255)
				btn.Font = Enum.Font.GothamSemibold
				btn.TextSize = 14
				btn.Text = text
				btn.Parent = contentHolder
				btn.AutoButtonColor = true
				local corner = Instance.new("UICorner", btn)
				corner.CornerRadius = UDim.new(0, 5)
				btn.MouseButton1Click:Connect(callback)
				updateSize()
				return btn
			end

			function sectionAPI:AddToggle(text, callback)
				local toggleHolder = Instance.new("Frame")
				toggleHolder.Size = UDim2.new(1, 0, 0, 25)
				toggleHolder.BackgroundTransparency = 1
				toggleHolder.Parent = contentHolder

				local label = Instance.new("TextLabel")
				label.Size = UDim2.new(1, -50, 1, 0)
				label.BackgroundTransparency = 1
				label.Text = text
				label.TextColor3 = Color3.fromRGB(220, 220, 220)
				label.TextSize = 14
				label.Font = Enum.Font.Gotham
				label.TextXAlignment = Enum.TextXAlignment.Left
				label.Parent = toggleHolder

				local toggle, setToggle = createToggle(toggleHolder, callback)
				toggle.AnchorPoint = Vector2.new(1, 0.5)
				toggle.Position = UDim2.new(1, -10, 0.5, 0)
				toggle.Parent = toggleHolder

				updateSize()
				return {
					Set = setToggle,
					Instance = toggleHolder
				}
			end

			function sectionAPI:AddSlider(text, min, max, default, callback)
				local sliderHolder = Instance.new("Frame")
				sliderHolder.Size = UDim2.new(1, 0, 0, 40)
				sliderHolder.BackgroundTransparency = 1
				sliderHolder.Parent = contentHolder

				local label = Instance.new("TextLabel")
				label.Size = UDim2.new(1, 0, 0, 14)
				label.BackgroundTransparency = 1
				label.Text = text
				label.TextColor3 = Color3.fromRGB(220, 220, 220)
				label.TextSize = 14
				label.Font = Enum.Font.Gotham
				label.TextXAlignment = Enum.TextXAlignment.Left
				label.Parent = sliderHolder

				local slider = createSlider(sliderHolder, min, max, default, callback)
				slider.Position = UDim2.new(0, 0, 0, 16)
				slider.Parent = sliderHolder

				updateSize()
				return sliderHolder
			end

			function sectionAPI:AddDropdown(text, options, default, callback)
				local dropdownHolder = Instance.new("Frame")
				dropdownHolder.Size = UDim2.new(1, 0, 0, 40)
				dropdownHolder.BackgroundTransparency = 1
				dropdownHolder.Parent = contentHolder

				local label = Instance.new("TextLabel")
				label.Size = UDim2.new(1, 0, 0, 14)
				label.BackgroundTransparency = 1
				label.Text = text
				label.TextColor3 = Color3.fromRGB(220, 220, 220)
				label.TextSize = 14
				label.Font = Enum.Font.Gotham
				label.TextXAlignment = Enum.TextXAlignment.Left
				label.Parent = dropdownHolder

				local dropdown = createDropdown(dropdownHolder, options, default, callback)
				dropdown.Position = UDim2.new(0, 0, 0, 16)
				dropdown.Parent = dropdownHolder

				updateSize()
				return dropdownHolder
			end

			function sectionAPI:AddTextbox(text, placeholder, callback)
				local textboxHolder = Instance.new("Frame")
				textboxHolder.Size = UDim2.new(1, 0, 0, 40)
				textboxHolder.BackgroundTransparency = 1
				textboxHolder.Parent = contentHolder

				local label = Instance.new("TextLabel")
				label.Size = UDim2.new(1, 0, 0, 14)
				label.BackgroundTransparency = 1
				label.Text = text
				label.TextColor3 = Color3.fromRGB(220, 220, 220)
				label.TextSize = 14
				label.Font = Enum.Font.Gotham
				label.TextXAlignment = Enum.TextXAlignment.Left
				label.Parent = textboxHolder

				local textbox = createTextbox(textboxHolder, placeholder, callback)
				textbox.Position = UDim2.new(0, 0, 0, 16)
				textbox.Parent = textboxHolder

				updateSize()
				return textboxHolder
			end

			function sectionAPI:AddColorPicker(text, defaultColor, callback)
				local colorPickerHolder = Instance.new("Frame")
				colorPickerHolder.Size = UDim2.new(1, 0, 0, 30)
				colorPickerHolder.BackgroundTransparency = 1
				colorPickerHolder.Parent = contentHolder

				local label = Instance.new("TextLabel")
				label.Size = UDim2.new(1, 0, 0, 14)
				label.BackgroundTransparency = 1
				label.Text = text
				label.TextColor3 = Color3.fromRGB(220, 220, 220)
				label.TextSize = 14
				label.Font = Enum.Font.Gotham
				label.TextXAlignment = Enum.TextXAlignment.Left
				label.Parent = colorPickerHolder

				local colorDisplay = Instance.new("Frame")
				colorDisplay.Size = UDim2.new(0, 30, 0, 20)
				colorDisplay.Position = UDim2.new(1, -35, 0, 5)
				colorDisplay.BackgroundColor3 = defaultColor or Color3.fromRGB(255, 255, 255)
				colorDisplay.BorderSizePixel = 0
				colorDisplay.Parent = colorPickerHolder
				local corner = Instance.new("UICorner", colorDisplay)
				corner.CornerRadius = UDim.new(0, 5)

				-- Basic color picker placeholder, calls callback with white color on click
				colorDisplay.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						callback(Color3.fromRGB(255, 255, 255))
					end
				end)

				return colorPickerHolder
			end

			function sectionAPI:AddKeybind(text, defaultKey, callback)
				local keybindHolder = Instance.new("Frame")
				keybindHolder.Size = UDim2.new(1, 0, 0, 30)
				keybindHolder.BackgroundTransparency = 1
				keybindHolder.Parent = contentHolder

				local label = Instance.new("TextLabel")
				label.Size = UDim2.new(0.7, 0, 1, 0)
				label.BackgroundTransparency = 1
				label.Text = text
				label.TextColor3 = Color3.fromRGB(220, 220, 220)
				label.TextSize = 14
				label.Font = Enum.Font.Gotham
				label.TextXAlignment = Enum.TextXAlignment.Left
				label.Parent = keybindHolder

				local keybindBtn = Instance.new("TextButton")
				keybindBtn.Size = UDim2.new(0.3, -10, 1, 0)
				keybindBtn.Position = UDim2.new(0.7, 10, 0, 0)
				keybindBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
				keybindBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
				keybindBtn.Text = defaultKey.Name or "None"
				keybindBtn.Font = Enum.Font.Gotham
				keybindBtn.TextSize = 14
				keybindBtn.Parent = keybindHolder
				local corner = Instance.new("UICorner", keybindBtn)
				corner.CornerRadius = UDim.new(0, 6)

				local listening = false

				keybindBtn.MouseButton1Click:Connect(function()
					if listening then return end
					listening = true
					keybindBtn.Text = "..."
					local conn
					conn = UserInputService.InputBegan:Connect(function(input, processed)
						if processed then return end
						if input.UserInputType == Enum.UserInputType.Keyboard then
							keybindBtn.Text = input.KeyCode.Name
							callback(input.KeyCode)
							listening = false
							conn:Disconnect()
						end
					end)
				end)

				return keybindHolder
			end

			return sectionAPI
		end

		return {
			AddSection = addSection
		}
	end

	return self
end

return FrostUI
